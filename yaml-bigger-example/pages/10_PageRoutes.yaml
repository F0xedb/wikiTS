
# MIT License
# 
# Copyright (c) 2020 Meyers Tom
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
- name: PageRoute
  description: A Rest endpoint /api/page giving diverse information about a specific wiki page
  sections:
    - type: 10
      title: Method signature
      payload: |-
        export function PageDescription(app: any);
      css: language-ts
    - type: 0
      title: parameters
      payload: |-
        PageDescription takes an app as input.
        This app is of the type ExpressApplication as declared by the express framework
    - type: 2
      title: Routes
    - type: 10
      title: info
      payload: |-
        /api/pages
      css: language-sh
    - type: 0
      title: Action
      payload: |-
        Returns a Page[] object as defined in the DeclarationDefinition
    - type: 10
      title: info
      payload: |-
        [
          {
            name: "Class",
            description: "This class does something"
            sections: [
              {
                type: 10,
                title: "Some title",
                inheritsID: 1,
                payload: "echo hello",
                width: "300px",
                height: "300px",
                css: "language-sh"
              },
              {
                type: 1,
                title: "Some title",
                payload: "echo hello",
              },
            ]
          }
        ]
      css: language-json
    - type: 10
      title: declaration
      payload: |-
        /api/page/:id
      css: language-sh
    - type: 0
      title: Action
      payload: |-
        Returns a specific page by its array index
    - type: 10
      title: info
      payload: |-
        {
          name: "Class",
          description: "This class does something"
          sections: [
            {
              type: 10,
              title: "Some title",
              inheritsID: 1,
              payload: "echo hello",
              width: "300px",
              height: "300px",
              css: "language-sh"
            },
            {
              type: 1,
              title: "Some title",
              payload: "echo hello",
            },
          ]
        }
      css: language-json
    - type: 10
      title: declaration
      payload: |-
        /api/page/:id/name
      css: language-sh
    - type: 0
      title: Action
      payload: |-
        Returns the name of a page.
    - type: 10
      title: info
      payload: |-
        "wikiTS"
      css: language-json
    - type: 5
      title: sections
      payload: A section does not have to contain all data. The width and height property is used for images, css is the prismjs selector to indicate the language on syntax highlighting, inheritsID is used in case you want to tell this section inherits a certain page in the wiki as defined by the pageID
