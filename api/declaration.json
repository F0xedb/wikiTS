{"name": "WikiTS", "company": "ODEX", "logo": "assets/logo.svg", "description": "A modern yet configurable wiki", "pages": [{"name": "Main Page", "description": "Example page with all different section types", "sections": [{"type": 1, "title": "JsonReader", "inherits": 1, "payload": "The jsonReader class manipulates json files into a usable json object"}, {"type": 2, "title": "A title"}, {"type": 3, "title": "A subtitle"}, {"type": 4, "title": "A table", "payload": "year, month, day, hour\n2020, 1, 1,1\n2019, 1, 2, 3"}, {"type": 5, "title": "INFO", "payload": "This is some info"}, {"type": 6, "title": "WARN", "payload": "This is some warning"}, {"type": 7, "title": "ERROR", "payload": "This is some error"}, {"type": 8, "title": "Image", "payload": "https://tos.odex.be/images/logo.svg", "width": "300px", "height": "400px"}, {"type": 10, "title": "HTML", "payload": "<a href=\"#\"></a>", "css": "language-html"}, {"type": 10, "title": "CSS", "payload": "p {\n  font-size: 1.2rem;\n}", "css": "language-css"}]}, {"name": "Cors", "description": "Enable cors requests against the api", "sections": [{"type": 10, "title": "Method signature", "payload": "export function CorsBuilder(app: any);", "css": "language-ts"}, {"type": 0, "title": "Parameters", "payload": "The cors builder takes an app as parameter.\nThis app is of the type ExpressApplication as declared by the express framework"}, {"type": 6, "title": "CORS function call", "payload": "Make sure to call this function before any route is declared."}, {"type": 0, "title": "Functionality", "payload": "CorsBuilder will build a whitelist of allowed domains.\nThis happens by setting the CORS headers at every payload"}, {"type": 5, "title": "domains", "payload": "Each domain is declared in the environment.ts file. Don't forget to customize that before deploying"}]}, {"name": "JSON Declaration interfaces", "description": "A declaration on how the json object should be build", "sections": [{"type": 10, "title": "Method signature", "payload": "export interface JSONDeclaration {\n  name: string;\n  company: string;\n  logo: string;\n  description: string;\n  pages: Page[];\n  navigation: Navigation;\n  footer: Footer;\n}", "css": "language-ts"}, {"type": 0, "title": "Interface", "payload": "For a full declaration of the interface look up the api/business/DeclarationDefinition.ts file"}, {"type": 0, "title": "Functionality", "payload": "It consists of all interfaces needed to decode a json file.\nIn other words make sure your json declaration is correct."}, {"type": 6, "title": "declaration", "payload": "Your declaration.json file must follow this interface otherwise your wiki will be broken."}]}, {"name": "JSONReader", "description": "A reader object that returns correctly parsed json from a given file", "sections": [{"type": 10, "title": "Method signature", "payload": "export function Reader();", "css": "language-ts"}, {"type": 0, "title": "Functionality", "payload": "The reader will only read the json declaration once. \nAfter that it will always return the same instance to save on cpu cycles."}]}, {"name": "Log", "description": "A log class used to log diverse information in the terminal", "sections": [{"type": 10, "title": "Method signature", "payload": "export function log(payload: any, type: ELogType = ELogType.DEBUG);\nexport enum ELogType {\n  ERROR,\n  WARN,\n  DEBUG\n}", "css": "language-ts"}, {"type": 0, "title": "parameters", "payload": "payload can be anything. It will call the toString() method and log that to stdout.\nELogType tells us the type of log. You can specify in the environment file which type to log."}, {"type": 0, "title": "Functionality", "payload": "Simple logs the object to stdout."}, {"type": 5, "title": "Environment", "payload": "You can specify what to log in the environment file. Using the logLevel setting. The higher the number more information will be displayed"}]}, {"name": "APIInfo", "description": "A Rest endpoint /api/info giving diverse information about the running api instance", "sections": [{"type": 10, "title": "Method signature", "payload": "export function APIInfo(app: any);", "css": "language-ts"}, {"type": 0, "title": "parameters", "payload": "APIInfo takes an app as input.\nThis app is of the type ExpressApplication as declared by the express framework"}, {"type": 2, "title": "Routes"}, {"type": 10, "title": "info", "payload": "/api/info", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns json containing the settings in the environment file"}, {"type": 10, "title": "info", "payload": "{\n  name: \"WikiTS\",\n  port: 3000,\n  cors: [\"https://www.example.com\"],\n  log: 3,\n  version: \"v0.0.1\",\n  declaration: \"/app/declaration.json\"\n}", "css": "language-json"}, {"type": 10, "title": "declaration", "payload": "/api/declaration", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns the entire declaration.json file as generated by the administrator"}, {"type": 10, "title": "info", "payload": "{\n  name: \"WikiTS\",\n  company: \"ODEX\",\n  logo: \"https://tos.odex.be/images/logo.vsg\"\n  description: \"A modern yet configurable wiki\",\n  pages: [],\n  navigation: {\n    name: \"WikiTS navigation\",\n    sections: []\n  },\n  footer: {\n    sections: [\n      {\n        name: \"WikiTS\",\n        description: \"Build with love\"\n      }\n    ]\n  }\n}", "css": "language-json"}, {"type": 6, "title": "Declaration", "payload": "The declaration above is not fully displayed as that would be to large. Look at the DeclarationDefinition for more information"}]}, {"name": "FooterRoute", "description": "A Rest endpoint /api/footer giving diverse information about the footer of a webpage", "sections": [{"type": 10, "title": "Method signature", "payload": "export function FooterDescription(app: any);", "css": "language-ts"}, {"type": 0, "title": "parameters", "payload": "FooterDescription takes an app as input.\nThis app is of the type ExpressApplication as declared by the express framework"}, {"type": 2, "title": "Routes"}, {"type": 10, "title": "info", "payload": "/api/footer", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns json containing the entire footer."}, {"type": 10, "title": "info", "payload": "{\n  sections: [\n    {\n      name: \"Links\",\n      description: \"Important link\",\n      links: [\n        {\n          name: \"Github\",\n          logo: \"fab fa-github\",\n          url: \"https://github.com/F0xedb/WikiTS\"\n        }\n      ]\n    }\n  ]\n}", "css": "language-json"}, {"type": 10, "title": "declaration", "payload": "/api/footer/:id", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns a specific footer section."}, {"type": 10, "title": "info", "payload": "{\n  name: \"Links\",\n  description: \"Important link\",\n  links: [\n    {\n      name: \"Github\",\n      logo: \"fab fa-github\",\n      url: \"https://github.com/F0xedb/WikiTS\"\n    }\n  ]\n}", "css": "language-json"}]}, {"name": "GeneralRoute", "description": "A Rest endpoint /api/general giving diverse information the general state of the wiki", "sections": [{"type": 10, "title": "Method signature", "payload": "export function GeneralDescription(app: any);", "css": "language-ts"}, {"type": 0, "title": "parameters", "payload": "GeneralDescription takes an app as input.\nThis app is of the type ExpressApplication as declared by the express framework"}, {"type": 2, "title": "Routes"}, {"type": 10, "title": "info", "payload": "/api/general", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns json containing general website information."}, {"type": 10, "title": "info", "payload": "{\n  name: \"WikiTS\",\n  logo: \"a link or encoded data such as base64\",\n  description: \"WikiTS example response\",\n  company: \"Company Name\"\n}", "css": "language-json"}]}, {"name": "NavigationRoute", "description": "A Rest endpoint /api/nav giving diverse information about the navigation around the wiki", "sections": [{"type": 10, "title": "Method signature", "payload": "export function NavigationDescription(app: any);", "css": "language-ts"}, {"type": 0, "title": "parameters", "payload": "NavigationDescription takes an app as input.\nThis app is of the type ExpressApplication as declared by the express framework"}, {"type": 2, "title": "Routes"}, {"type": 10, "title": "info", "payload": "/api/nav", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns a navigation object as defined in the DeclarationDefinition"}, {"type": 10, "title": "info", "payload": "{\n  name: \"WikiTS Navigation\",\n  sections: [\n    {\n      name: \"Classes\",\n      elements: [\n        {\n          name: \"Class1\",\n          pageID: 1\n        },\n        {\n          name: \"Class2\",\n          pageID: 2\n        },\n      ]\n    }\n  ]\n}", "css": "language-json"}, {"type": 10, "title": "declaration", "payload": "/api/nav/:id", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns a navigation section."}, {"type": 10, "title": "info", "payload": "{\n  name: \"Classes\",\n  elements: [\n    {\n      name: \"Class1\",\n      pageID: 1\n    },\n    {\n      name: \"Class2\",\n      pageID: 2\n    },\n  ]\n}", "css": "language-json"}, {"type": 10, "title": "declaration", "payload": "/api/nav/:id/:elementID", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns a navigation element from a specific section."}, {"type": 10, "title": "info", "payload": "{\n  name: \"Class1\",\n  pageID: 1\n}", "css": "language-json"}, {"type": 5, "title": "pageID", "payload": "pageID is a reference to the array index of the pages section in the declaration file"}]}, {"name": "PageRoute", "description": "A Rest endpoint /api/page giving diverse information about a specific wiki page", "sections": [{"type": 10, "title": "Method signature", "payload": "export function PageDescription(app: any);", "css": "language-ts"}, {"type": 0, "title": "parameters", "payload": "PageDescription takes an app as input.\nThis app is of the type ExpressApplication as declared by the express framework"}, {"type": 2, "title": "Routes"}, {"type": 10, "title": "info", "payload": "/api/pages", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns a Page[] object as defined in the DeclarationDefinition"}, {"type": 10, "title": "info", "payload": "[\n  {\n    name: \"Class\",\n    description: \"This class does something\"\n    sections: [\n      {\n        type: 10,\n        title: \"Some title\",\n        inheritsID: 1,\n        payload: \"echo hello\",\n        width: \"300px\",\n        height: \"300px\",\n        css: \"language-sh\"\n      },\n      {\n        type: 1,\n        title: \"Some title\",\n        payload: \"echo hello\",\n      },\n    ]\n  }\n]", "css": "language-json"}, {"type": 10, "title": "declaration", "payload": "/api/page/:id", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns a specific page by its array index"}, {"type": 10, "title": "info", "payload": "{\n  name: \"Class\",\n  description: \"This class does something\"\n  sections: [\n    {\n      type: 10,\n      title: \"Some title\",\n      inheritsID: 1,\n      payload: \"echo hello\",\n      width: \"300px\",\n      height: \"300px\",\n      css: \"language-sh\"\n    },\n    {\n      type: 1,\n      title: \"Some title\",\n      payload: \"echo hello\",\n    },\n  ]\n}", "css": "language-json"}, {"type": 10, "title": "declaration", "payload": "/api/page/:id/name", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns the name of a page."}, {"type": 10, "title": "info", "payload": "\"wikiTS\"", "css": "language-json"}, {"type": 5, "title": "sections", "payload": "A section does not have to contain all data. The width and height property is used for images, css is the prismjs selector to indicate the language on syntax highlighting, inheritsID is used in case you want to tell this section inherits a certain page in the wiki as defined by the pageID"}]}, {"name": "RouteBuilder", "description": "Takes all Routes and build a fully functional express endpoint out of it", "sections": [{"type": 10, "title": "Method signature", "payload": "export function RouteBuilder(app: any);", "css": "language-ts"}, {"type": 0, "title": "Parameters", "payload": "The RouteBuilder takes an app as parameter.\nThis app is of the type ExpressApplication as declared by the express framework"}, {"type": 6, "title": "RouteBuilder function call", "payload": "This function configures all application routes as defined by the routers"}, {"type": 0, "title": "Functionality", "payload": "RouteBuilder sets every route callback in the express application"}, {"type": 5, "title": "CORS", "payload": "Make sure to call the CORS object before this otherwise cors is configured wrongly"}]}, {"name": "SectionRoutes", "description": "A Rest endpoint /api/section giving diverse information about a specific section of a wiki page", "sections": [{"type": 10, "title": "Method signature", "payload": "export function SectionDescription(app: any);", "css": "language-ts"}, {"type": 0, "title": "parameters", "payload": "SectionDescription takes an app as input.\nThis app is of the type ExpressApplication as declared by the express framework"}, {"type": 2, "title": "Routes"}, {"type": 10, "title": "info", "payload": "/api/section/;pageID/:sectionID", "css": "language-sh"}, {"type": 0, "title": "Action", "payload": "Returns json containing an entire section ."}, {"type": 10, "title": "info", "payload": "{\n  type: 10,\n  title: \"Some title\",\n  inheritsID: 1,\n  payload: \"echo hello\",\n  width: \"300px\",\n  height: \"300px\",\n  css: \"language-sh\"\n},", "css": "language-json"}, {"type": 5, "title": "sections", "payload": "A section does not have to contain all data. The width and height property is used for images, css is the prismjs selector to indicate the language on syntax highlighting, inheritsID is used in case you want to tell this section inherits a certain page in the wiki as defined by the pageID"}]}, {"name": "JSON declaration", "description": "A wiki page on how the json declaration is build", "sections": [{"type": 1, "title": "JSON declaration", "inherits": 2, "payload": "Extra information about the declaration and its state"}, {"type": 10, "title": "Method signature", "payload": "interface Page {\n  name: string;\n  description: string;\n  sections: PageSection[];\n}\n\ninterface PageSection {\n  type: PageSectionType;\n  title: string;\n  inheritsID: number; // the inheritance of other pages\n  payload: string; // valid markdown (if a table this should be in csv format)\n  width: string; // used by the image component\n  height: string; // also used by the image component\n  css: string; // the prismjs css class to define the type of code\n}\n\nenum PageSectionType {\n  TEXT, //* This section is just plain text\n  TITLE, //* This section describes a title\n  SUBTITLE, //* This section describes a subtitle\n  TABLE, //* This section describes a table\n  INFO, //* this section is a info note\n  WARNING, //* this section is a warning note\n  ERROR, //* this section is a error note\n  IMAGE, //* this section describes an image (base64, url and more)\n  LINK, //* a reference link\n  CODE //* the code highlighter\n}\n\ninterface Footer {\n  sections: FooterSection[];\n}\n\ninterface FooterSection {\n  name: string;\n  description: string;\n  links: Link[];\n}\n\ninterface Link {\n  logo: string;\n  url: string;\n  name: string;\n}\n\ninterface Navigation {\n  name: string;\n  sections: NavigationSection[];\n}\n\ninterface NavigationSection {\n  name: string;\n  elements: NavigationElement[];\n}\n\ninterface NavigationElement {\n  name: string;\n  pageID: number;\n}\n\nexport interface JSONDeclaration {\n  name: string;\n  company: string;\n  logo: string;\n  description: string;\n  pages: Page[];\n  navigation: Navigation;\n  footer: Footer;\n}", "css": "language-ts"}, {"type": 10, "title": "declaration example", "payload": "{\n  name: \"WikiTS\",\n  company: \"ODEX\",\n  logo: \"https://tos.odex.be/images/logo.vsg\"\n  description: \"A modern yet configurable wiki\",\n  pages: [\n    {\n      name: \"Class\",\n      description: \"This class does something\"\n      sections: [\n        {\n          type: 10,\n          title: \"Some title\",\n          inheritsID: 1,\n          payload: \"echo hello\",\n          width: \"300px\",\n          height: \"300px\",\n          css: \"language-sh\"\n        },\n        {\n          type: 1,\n          title: \"Some title\",\n          payload: \"echo hello\",\n        },\n      ]\n    }\n  ],\n  navigation: {\n    name: \"WikiTS Navigation\",\n    sections: [\n      {\n        name: \"Classes\",\n        elements: [\n          {\n            name: \"Class1\",\n            pageID: 1\n          },\n          {\n            name: \"Class2\",\n            pageID: 2\n          },\n        ]\n      }\n    ]\n  },\n  footer: {\n    sections: [\n      {\n        name: \"WikiTS\",\n        description: \"Build with love\"\n      }\n    ]\n  }\n}", "css": "language-json"}, {"type": 6, "title": "Full example", "payload": "For an example of a full definition visit the WikiTS repository and look under api/declaration.json."}]}, {"name": "YAML Declaration", "description": "A wiki page on how the yaml declaration is build", "sections": [{"type": 1, "title": "Types", "payload": "There are 2 types of yaml declarations.\nThe first is one giant file\nThe second declaration is a yaml directory.\nIt is recommended to use the yaml directory if you are planning on building a large wiki.\nIf it is for a small wiki or testing purposes then you can use the single declaration file."}, {"type": 2, "title": "Declaration"}, {"type": 3, "title": "Declaration file"}, {"type": 1, "title": "The file", "payload": "You can name the file however you see fit. All that matters is that the file follows the yaml specification."}, {"type": 10, "title": "Example file", "css": "language-yaml", "payload": "name: WikiTS\nlogo: https://tos.odex.be/images/logo.svg\ndescription: A modern wiki describing you code\npages:\n  - name: Main Page\n    description: Example page with all different section types\n    sections:\n      - type: 1\n        title: JsonReader\n        inherits: 1\n        payload: The jsonReader class manipulates json files into a usable json object\n      - type: 2\n        title: A title\n      - type: 3\n        title: A subtitle\n      - type: 4\n        title: A table\n        payload: |-\n          year, month, day, hour\n          2020, 1, 1,1\n          2019, 1, 2, 3\n      - type: 5\n        title: INFO\n        payload: This is some info\n      - type: 6\n        title: WARN\n        payload: This is some warning\n      - type: 7\n        title: ERROR\n        payload: This is some error\n      - type: 8\n        title: Image\n        payload: https://tos.odex.be/images/logo.svg\n        width: 300px\n        height: 400px\n  - name: Reader\n    description: A reader object\n    sections:\n      - type: 1\n        title: Some title\n        payload: This page is used as a reference in the main page\n      - type: 9\n        title: We even have links as a section\n        payload: https://tos.odex.be\n      - type: 9\n        title: Or with alternate text\n        payload: link here;https://tos.odex.be\nnavigation:\n  name: WikiTS navigation\n  sections:\n    - name: pages\n      elements:\n        - name: Main Page\n          pageID: 0\n        - name: Reader Class\n          pageID: 1\n    - name: classes\n      elements:\n        - name: Reader\n          pageID: 1\nfooter:\n  sections:\n    - name: WikiTS\n      description: build with love just for you\n    - name: Links\n      description: Must visit websites\n      links:\n        - name: TOS\n          url: https://tos.odex.be\n        - name: github\n          url: https://github.com/F0xedb"}, {"type": 5, "title": "Note", "payload": "To generate this file you should have python3 installed.\nPyYaml should also be installed after that the following command should work\npython -m generator -j -i file.yaml"}, {"type": 6, "title": "Parsing error", "payload": "In case you have a parsing error that the following command will help\npython -m generator -j --log -i file.yaml"}, {"type": 3, "title": "Declaration directory"}, {"type": 4, "title": "Structure", "payload": "directory, filename, function\nroot/, general.yaml, shows the general structure of your wiki eg the name\nroot/, navigation.yaml, shows the navigation structure shown on the left of this websites\nroot/, footer.yaml, shows all information about the footer of your webpage\nroot/pages/, *.yaml, generates each page that exists in the wiki, you access the page alphabetically as their id's"}, {"type": 1, "title": "general.yaml file", "payload": "The following shows an example of the general.yaml file.\nIt contains major info about your wiki such as the name, company, logo and description."}, {"type": 10, "title": "example general.yaml file", "css": "language-yaml", "payload": "name: WikiTS\ncompany: ODEX\nlogo: https://tos.odex.be/images/logo.svg\ndescription: A modern yet configurable wiki"}, {"type": 1, "title": "navigation.yaml file", "payload": "The following shows an example of the navigation.yaml file.\nIt contains information about now to navigate your wiki."}, {"type": 10, "title": "example navigation.yaml file", "css": "language-yaml", "payload": "name: WikiTS navigation\nsections:\n  - name: pages\n    elements:\n      - name: Main Page\n        pageID: 0\n      - name: Reader Class\n        pageID: 1\n  - name: classes\n    elements:\n      - name: Reader\n        pageID: 1"}, {"type": 5, "title": "PageID numeration", "payload": "Each element must have a pageID. \nA page id describes where you need to navigate too.\nThe Id is the alphabetical position of your files.\nStarting from index 0.\nThis means the first page has pageID = 0"}, {"type": 1, "title": "footer.yaml file", "payload": "The following shows an example of the footer.yaml file.\nIt contains information what should be in the footer"}, {"type": 10, "title": "example footer.yaml file", "css": "language-yaml", "payload": "- name: WikiTS\n  description: build with \u2764 just for you # yes unicode also works\n- name: Links\n  description: Must visit websites\n  links:\n    - name: TOS\n      url: https://tos.odex.be\n      logo: fas fa-server # as described on font-awesome\n    - name: github\n      url: https://github.com/F0xedb\n      logo: fab fa-github # as described on font-awesome"}, {"type": 5, "title": "Logos", "payload": "Logos are described as the css selectors as defined by fontawesome.\nHere is a list of supported icons <a href=\"https://fontawesome.com/icons?d=gallery\">icons</a>"}, {"type": 1, "title": "pages directory", "payload": "Each page should be in the pages directory.\nEach page should end with the .yaml extension.\nAn index will be build out of all pages.\nFirst the pages will be sorted alphabetically.\nIf you wish to reference that page you can find its id by seeing in which part that page is present."}, {"type": 10, "title": "example pages/01_main_page.yaml file", "css": "language-yaml", "payload": "- name: Main Page\ndescription: Example page with all different section types\nsections:\n  - type: 1\n    title: JsonReader\n    inherits: 1\n    payload: The jsonReader class manipulates json files into a usable json object\n  - type: 2\n    title: A title\n  - type: 3\n    title: A subtitle\n  - type: 4\n    title: A table\n    payload: |-\n      year, month, day, hour\n      2020, 1, 1,1\n      2019, 1, 2, 3\n  - type: 5\n    title: INFO\n    payload: This is some info\n  - type: 6\n    title: WARN\n    payload: This is some warning\n  - type: 7\n    title: ERROR\n    payload: This is some error\n  - type: 8\n    title: Image\n    payload: https://tos.odex.be/images/logo.svg\n    width: 300px\n    height: 400px"}, {"type": 10, "title": "example pages/01_main_page.yaml file", "css": "language-yaml", "payload": "- name: Main Page\ndescription: Example page with all different section types\nsections:\n  - type: 1\n    title: JsonReader\n    inherits: 1\n    payload: The jsonReader class manipulates json files into a usable json object\n  - type: 2\n    title: A title\n  - type: 3\n    title: A subtitle\n  - type: 4\n    title: A table\n    payload: |-\n      year, month, day, hour\n      2020, 1, 1,1\n      2019, 1, 2, 3\n  - type: 5\n    title: INFO\n    payload: This is some info\n  - type: 6\n    title: WARN\n    payload: This is some warning\n  - type: 7\n    title: ERROR\n    payload: This is some error\n  - type: 8\n    title: Image\n    payload: https://tos.odex.be/images/logo.svg\n    width: 300px\n    height: 400px"}, {"type": 10, "title": "example pages/02_reader_page.yaml file", "css": "language-yaml", "payload": "- name: Reader\n  description: A reader object\n  sections:\n    - type: 1\n      title: Some title\n      payload: This page is used as a reference in the main page\n    - type: 9\n      title: We even have links as a section\n      payload: https://tos.odex.be\n    - type: 9\n      title: Or with alternate text\n      payload: link here;https://tos.odex.be"}, {"type": 5, "title": "Note", "payload": "To generate the json file you should have python3 installed.\nPyYaml should also be installed after that the following command should work\npython -m generator -j -i directory"}, {"type": 6, "title": "Parsing error", "payload": "In case you have a parsing error that the following command will help\npython -m generator -j --log -i directory"}]}, {"name": "Wiki Generator", "description": "A python module that helps you generator the wiki definition file.\nIt supports json, yaml, markdown and more.\nThis wiki entry will help you generating wiki entries.", "sections": [{"type": 1, "title": "Dependencies", "payload": "You need the following dependencies installed on your system to generate the wiki declaration file\n* python3\n* PyYaml\nIf those are installed you can do the following command"}, {"type": 10, "title": "Shell command", "css": "language-shell", "payload": "python -m generator -h # shows the help menu\npython -m generator -v # shows general information about the tool\npython -m generator --json # convert the input into the json declaration file"}, {"type": 1, "title": "Input", "inherits": 13, "payload": "You can input the following formats:\n* yaml file\n* yaml directory\nThese will be converted into a declaration.json file"}, {"type": 10, "title": "Debug errors", "css": "language-shell", "payload": "# Log the generated data for easier debugging\npython -m generator --json --log -i <file/directory>"}]}], "navigation": {"name": "WikiTS navigation", "sections": [{"name": "Pages", "elements": [{"name": "Example Page", "pageID": 0}, {"name": "YAML declaration", "pageID": 13}, {"name": "JSON declaration", "pageID": 12}, {"name": "Wiki Generator", "pageID": 14}]}, {"name": "Classes", "elements": [{"name": "Cors", "pageID": 1}, {"name": "DeclarationDefinition", "pageID": 2}, {"name": "JsonReader", "pageID": 3}, {"name": "Log", "pageID": 4}, {"name": "ApiInfo", "pageID": 5}, {"name": "FooterRoutes", "pageID": 6}, {"name": "GeneralRoutes", "pageID": 7}, {"name": "NavigationRoutes", "pageID": 8}, {"name": "PageRoutes", "pageID": 9}, {"name": "RouteBuilder", "pageID": 10}, {"name": "SectionRoutes", "pageID": 11}]}, {"name": "Business", "elements": [{"name": "Cors", "pageID": 1}, {"name": "DeclarationDefinition", "pageID": 2}, {"name": "JsonReader", "pageID": 3}]}, {"name": "Log", "elements": [{"name": "Log", "pageID": 4}]}, {"name": "Routes", "elements": [{"name": "ApiInfo", "pageID": 5}, {"name": "FooterRoutes", "pageID": 6}, {"name": "GeneralRoutes", "pageID": 7}, {"name": "NavigationRoutes", "pageID": 8}, {"name": "PageRoutes", "pageID": 9}, {"name": "RouteBuilder", "pageID": 10}, {"name": "SectionRoutes", "pageID": 11}]}]}, "footer": {"sections": [{"name": "WikiTS", "description": "build with \u2764 just for you"}, {"name": "Links", "description": "Must visit websites", "links": [{"name": "TOS", "url": "https://tos.odex.be", "logo": "fas fa-server"}, {"name": "github", "url": "https://github.com/F0xedb", "logo": "fab fa-github"}]}]}}